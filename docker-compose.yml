version: "3"
services:
  react-app:
    container_name: mern-user-management-client
    stdin_open: true
    build:
      context: frontend/
      dockerfile: Dockerfile.dev
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    ports:
      - "${CLIENT_PORT:?CLIENT_PORT not set}:3000"
    env_file:
      - ./frontend/.env
    environment:
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING:?CHOKIDAR_USEPOLLING not set}:true
    networks:
      - mern-app
    depends_on:
      - api-server
    restart: always

  api-server:
    container_name: mern-user-management-api
    build:
      context: backend/
      dockerfile: Dockerfile.dev
    volumes:
      - "./backend:/app"
      - "/app/node_modules"
    ports:
      - "${API_PORT:?API_PORT not set}:5000"
    env_file:
      - ./backend/.env
    networks:
      - mern-app
    depends_on:
      - mongodb
    restart: always

  mongodb:
    container_name: mern-user-management-mongodb
    image: mongo:latest
    command: mongod --port ${MONGO_PORT}
    ports:
      - "${MONGO_PORT:?MONGO_PORT not set}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASS: ${MONGO_PASS}
      MONGO_DBNAME: ${MONGO_DBNAME}
    networks:
      - mern-app
    volumes:
      - mongo-data:/data/db
    restart: always
networks:
  mern-app:
    driver: bridge
volumes:
  mongo-data:
    driver: local